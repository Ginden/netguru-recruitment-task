name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      OMDB_API_KEY: ${{ secrets.OMDB_API_KEY }}
    steps:
    - uses: actions/checkout@v2
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - run: (cd movie-service && npm ci) && (cd auth-service && npm ci)
      name: 'Install dependencies'
    - run: (cd movie-service && npm run build)
      name: 'Build movie service'
    - run: (cd movie-service && npm run lint)
      name: 'Lint'
    - name: 'Run tests in docker'
      run: docker-compose -f docker-compose.yml -f db/docker-compose.yml -f auth-service/docker-compose.yml -f movie-service/docker-compose.yml -f movie-service/integration-test-docker.yml up --build --abort-on-container-exit
